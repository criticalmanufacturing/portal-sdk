name: Publish NPM Package on Release

on:
  release:
    types: [created]

jobs:
  BuildAndPublish:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Git checkout
        uses: actions/checkout@v2
      # Needs .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      # Run build
      - name: Build Windows
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
        run: dotnet publish --configuration Release --self-contained --runtime win-x64 Cmf.CustomerPortal.Sdk.sln
      - name: Build Linux
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
        run: dotnet publish --configuration Release --self-contained --runtime linux-x64 Cmf.CustomerPortal.Sdk.sln
      # Read version
      - name: Read tool version
        uses: QwerMike/xpath-action@v1
        id: getver
        with:
          filename: src/Version.props
          expression: '/Project/PropertyGroup/Version/text()'
      # Needs zip
      - name: Install zip
        uses: montudor/action-zip@v0.1.0
      # Generate packs
      - name: Archive Console Win64
        run: zip -X -r ../../../../../../../Cmf.CustomerPortal.Sdk.Console-${{ steps.getver.outputs.result }}.win-x64.zip .
        working-directory: src/Console/bin/Release/netcoreapp3.1/win-x64/publish/
      - name: Archive Console Linux64
        run: zip -X -r ../../../../../../../Cmf.CustomerPortal.Sdk.Console-${{ steps.getver.outputs.result }}.linux-x64.zip .
        working-directory: src/Console/bin/Release/netcoreapp3.1/linux-x64/publish/
      - name: Archive PowerShell
        run: zip -X -r ../../../../../../../Cmf.CustomerPortal.Sdk.PowerShell-${{ steps.getver.outputs.result }}.zip .
        working-directory: src/Powershell/bin/Release/netstandard2.0/linux-x64/publish/
      # Add to release assets
      - name: Add Console Win64 to Release assets
        uses: JasonEtco/upload-to-release@master
        with:
          args: Cmf.CustomerPortal.Sdk.Console-${{ steps.getver.outputs.result }}.win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add Console Linux64 to Release assets
        uses: JasonEtco/upload-to-release@master
        with:
          args: Cmf.CustomerPortal.Sdk.Console-${{ steps.getver.outputs.result }}.linux-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add PowerShell to Release assets
        uses: JasonEtco/upload-to-release@master
        with:
          args: Cmf.CustomerPortal.Sdk.PowerShell-${{ steps.getver.outputs.result }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Replace Version token on NPM package.json
      - name: Replace package.json Version token
        run: cd npm && sed -i ''s/#{Version}#/${{ steps.getver.outputs.result }}/g'' package.json
      # Publish NPM package (if pre-release)
      - run: cd npm && npm publish --tag next
        if: "github.event.release.prerelease"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Publish NPM package (if regular release)
      - run: cd npm && npm publish --tag latest
        if: "!github.event.release.prerelease"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
